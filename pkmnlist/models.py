from django.db import models


class pkmnlist(models.Model):
    id = models.AutoField(primary_key=True)
    pokedex_number = models.IntegerField()
    name = models.CharField(max_length=200)
    german_name = models.CharField(max_length=200, blank=True, null=True)
    japanese_name = models.CharField(max_length=200, blank=True, null=True)
    generation = models.IntegerField()
    status = models.CharField(max_length=200)
    species = models.CharField(max_length=200)
    type_number = models.IntegerField()
    # type foreign key from type database
    type_1 = models.CharField(max_length=200, blank=True, null=True)
    type_2 = models.CharField(max_length=200, blank=True, null=True)
    height_m = models.DecimalField(max_digits=4, decimal_places=1, blank=True, null=True)
    weight_kg = models.DecimalField(max_digits=4, decimal_places=1, blank=True, null=True)
    abilities_number = models.IntegerField()
    ability_1 = models.CharField(max_length=200, blank=True, null=True)
    ability_2 = models.CharField(max_length=200, blank=True, null=True)
    ability_hidden = models.CharField(max_length=250, blank=True, null=True)
    total_points = models.IntegerField()
    hp = models.IntegerField()
    attack = models.IntegerField()
    defense = models.IntegerField()
    sp_attack = models.IntegerField()
    sp_defense = models.IntegerField()
    speed = models.IntegerField()
    catch_rate = models.IntegerField(blank=True, null=True)
    base_friendship = models.IntegerField(blank=True, null=True)
    base_experience = models.IntegerField(blank=True, null=True)
    growth_rate = models.CharField(max_length=200, blank=True, null=True)
    egg_type_number = models.IntegerField()
    egg_type_1 = models.CharField(max_length=200, blank=True, null=True)
    egg_type_2 = models.CharField(max_length=200, blank=True, null=True)
    percentage_male = models.DecimalField(max_digits=4, decimal_places=1, blank=True, null=True)
    egg_cycles = models.IntegerField(blank=True, null=True)
    against_normal = models.DecimalField(max_digits=3, decimal_places=1)
    against_fire = models.DecimalField(max_digits=3, decimal_places=1)
    against_water = models.DecimalField(max_digits=3, decimal_places=1)
    against_electric = models.DecimalField(max_digits=3, decimal_places=1)
    against_grass = models.DecimalField(max_digits=3, decimal_places=1)
    against_ice = models.DecimalField(max_digits=3, decimal_places=1)
    against_fight = models.DecimalField(max_digits=3, decimal_places=1)
    against_poison = models.DecimalField(max_digits=3, decimal_places=1)
    against_ground = models.DecimalField(max_digits=3, decimal_places=1)
    against_flying = models.DecimalField(max_digits=3, decimal_places=1)
    against_psychic = models.DecimalField(max_digits=3, decimal_places=1)
    against_bug = models.DecimalField(max_digits=3, decimal_places=1)
    against_rock = models.DecimalField(max_digits=3, decimal_places=1)
    against_ghost = models.DecimalField(max_digits=3, decimal_places=1)
    against_dragon = models.DecimalField(max_digits=3, decimal_places=1)
    against_dark = models.DecimalField(max_digits=3, decimal_places=1)
    against_steel = models.DecimalField(max_digits=3, decimal_places=1)
    against_fairy = models.DecimalField(max_digits=3, decimal_places=1)

    def __str__(self):
        return self.name
